name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: traffic-switcher-linux-amd64.tar.gz
            tsctl_name: tsctl-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: traffic-switcher-linux-arm64.tar.gz
            tsctl_name: tsctl-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: traffic-switcher-macos-amd64.tar.gz
            tsctl_name: tsctl-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: traffic-switcher-macos-arm64.tar.gz
            tsctl_name: tsctl-macos-arm64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
            export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
            export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
          fi
          cargo build --release --target ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }} -p tsctl

      - name: Create archive
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/traffic_switcher dist/
          cp target/${{ matrix.target }}/release/tsctl dist/
          cp config.yaml.example dist/config.yaml.example || echo "No example config found"
          cd dist
          tar czf ../${{ matrix.artifact_name }} *

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/gzip